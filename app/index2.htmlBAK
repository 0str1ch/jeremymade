<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="application-name" content="jsmith">
    <meta name="apple-mobile-web-app-title" content="jsmith">
    <meta name="theme-color" content="#2a2a2a">
    <meta name="msapplication-navbutton-color" content="#2a2a2a">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="msapplication-starturl" content="/">
    <title>Jeremy Smith</title>
    <meta name="description" content="Your friendly neighborhood web designer." />
    <meta property="og:title" content="Jeremy Smith" />
    <meta property="og:description" content="Your friendly neighborhood web designer." />
    <meta property="og:image:secure_url" content="https://richpreview.com/richpreview.png" />
    <link href="/images/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!--build:js js/main.min.js-->
    <script src="js/lib/test.js"></script>
    <!--endbuild-->
    <!--build:css css/styles.min.css-->
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="css/components.css">
    <!--endbuild-->


</head>

<body>

    <main id="page">
        <div class="cc">
            <h1>This is homepage</h1>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore
                magna aliqua.</p>
            <a href="/about.html">Go to other page</a>
        </div>
    </main>
    <script> var cache = {};
        function loadPage(url) {
            if (cache[url]) {
                return new Promise(function (resolve) {
                    resolve(cache[url]);
                });
            }

            return fetch(url, {
                method: 'GET'
            }).then(function (response) {
                cache[url] = response.text();
                return cache[url];
            });
        }

        var main = document.querySelector('main');

        function changePage() {
            var url = window.location.href;

            loadPage(url).then(function (responseText) {
                var wrapper = document.createElement('div');
                wrapper.innerHTML = responseText;

                var oldContent = document.querySelector('.cc');
                var newContent = wrapper.querySelector('.cc');

                main.appendChild(newContent);
                animate(oldContent, newContent);
            });
        }

        function animate(oldContent, newContent) {
            oldContent.style.position = 'absolute';

            var fadeOut = oldContent.animate({
                opacity: [1, 0]
            }, 1000);

            var fadeIn = newContent.animate({
                opacity: [0, 1]
            }, 1000);

            fadeOut.onfinish = function () {
                oldContent.parentNode.removeChild(oldContent);
            };

        }

        window.addEventListener('popstate', changePage);

        document.addEventListener('click', function (e) {
            var el = e.target;

            while (el && !el.href) {
                el = el.parentNode;
            }

            if (el) {
                e.preventDefault();
                history.pushState(null, null, el.href);
                changePage();

                return;
            }
        });</script>

</body>

</html>